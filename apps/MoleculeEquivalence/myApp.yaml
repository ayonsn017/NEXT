# MoleculeEquivalence shows participants two molecules in different representations and asks them if those two molecules are the same or not
extends: [base.yaml]
initExp:
  args:
    app_id:
      values: [MoleculeEquivalence]
    args:
      values:
        alg_list:
          values:
            values:
              alg_id:
                description: Supported algorithm types for MoleculeEquivalence.
                values: [RandomTrainTest, FixedTrainRandomTest]
              pretest_dist:
                description: the pretest distribution as a list of dictionaries
                type: list
                values:
                    type: dict
                    values:
                        Molecule1:
                            type: str
                        Representation1:
                            type: str
                        Molecule2:
                            type: str
                        Representation2:
                            type: str
                        Same:
                            type: str
                        Probability:
                            type: str
              training_data:
                description: the training distribution or training questions as a list of dictionaries
                type: list
                values:
                    type: dict
                    values:
                        Molecule1:
                            type: str
                        Representation1:
                            type: str
                        Molecule2:
                            type: str
                        Representation2:
                            type: str
                        Same:
                            type: str
                        Probability:
                            type: str
                            optional: true
              posttest_dist:
                description: the pretest distribution as a list of dictionaries
                type: list
                values:
                    type: dict
                    values:
                        Molecule1:
                            type: str
                        Representation1:
                            type: str
                        Molecule2:
                            type: str
                        Representation2:
                            type: str
                        Same:
                            type: str
                        Probability:
                            type: str
              guard_data: 
                description: String containing a list of guard questions  
                type: list
                values:
                    type: dict
                    values:
                        Molecule1:
                            type: str
                        Representation1:
                            type: str
                        Molecule2:
                            type: str
                        Representation2:
                            type: str
                        Same:
                            type: str
              time_required:
                description: Estimated time required to complete the survey, will be shown in introduction
                type: str
              monetary_gain:
                description: Monetary gain for the participants, will be shown in introduction
                type: str
        instructions:
          default: Please select, using your mouse or left and right arrow keys, the item on the bottom that is closest to the top.
          optional: true
        pretest_count:
          description: Number of pretest questions (int) to show to the participant.
          type: num
        training_count:
          description: Number of training questionsc (int) to show to the participant.
          type: num
        posttest_count:
          description: Number of posttest questions (int) to show to the participant.
          type: num
        guard_gap:
          description: Gap between guard questions
          type: num

processAnswer:
  args:
    args:
      type: dict
      values:
        target_winner:
          description: Participant's answer. Must be between 0 and 1.
          type: num
        participant_uid:
          description: Participant unique ID
          type: str
          

